name: pytest
on:
  push:
    # branches: [ main ]
    # Publish semver tags as releases.
    tags: [ '*.*.*' ]
  pull_request:
  pull_request_target:
    types: [labeled]

jobs:
  black-pytype:
    # do not run on pull_request_target since it should be triggered by pull_request
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'pull_request')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: "poetry"
      - name: Set Poetry config
        run: |
          poetry config virtualenvs.in-project false
          poetry config virtualenvs.path ~/.virtualenvs
      - name: Install Dependencies
        run: |
          poetry install
          poetry run sh setup.sh
        if: steps.cache.outputs.cache-hit != 'true'
      - name: black
        run: poetry run black . --check --line-length=140
      - name: pytype
        run: poetry run pytype --config .pytype.cfg -j 2
  test-unit:
    # do not run on pull_request_target since it should be triggered by pull_request
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'pull_request')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v1
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: "poetry"
      - name: Set Poetry config
        run: |
          poetry config virtualenvs.in-project false
          poetry config virtualenvs.path ~/.virtualenvs
      - name: Install Dependencies
        run: |
          poetry install
          poetry run sh setup.sh
        if: steps.cache.outputs.cache-hit != 'true'
      - name: Run unit tests
        run: |
          poetry run pytest -s tests